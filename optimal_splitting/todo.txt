DONE
* implement tests (how to import files from one subfolder to another) [DONE]
* write read me [DONE]
* write main [DONE]
* put it on github [DONE]
* name for "temp" --> include it in the main function? or not? [DONE]
* include random seeds to recreate setups? --> save in dict as well [DONE]
* run tests multiple times with different params [DONE]
* fix index error in test suite test_connectivity [DONE]
* do file docstrings and function doc strings 
	! auxiliary [DONE]
	! generate_AS [DONE]
	! split_merge [DONE]
	! test_initial_graph [DONE]
	! test_results [DONE]
	! main [DONE]

TODO
* What happens if attack volume < sum(capabilities)? --> Write Input Validation (we assume that we get it right)
* next to going through all permutations, an option would be nice that is greedy
* implement cost function
	* add costs to dictionary and return
* test_distribution_of_attack_flow still throws error at the end
* sometimes zero division in set split

STYLE
* change all G and Graph to graph
* change adversary to source



IMPORTANT:
 - FIX ALLY DISTRIBUTION ERROR
 - THEN, AFTER, make it so it is less nice for traffic to go over the ally nodes (unwanted_change / 2)